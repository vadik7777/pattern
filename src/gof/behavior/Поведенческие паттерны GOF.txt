Поведенчиские паттерны GOF
1. Интерпритатор (Interpreter)
2. Итератор (Iterator) или Курсор (Cursor)
3. Команда (Command), Действие (Action) или Транзакция (Transaction)
4. Наблюдатель (Observer), Опубликовать - подписаться (Publish - Subscriber) или Delegation Event Model
5. Посетитель (Visitor)
6. Посредник (Mediator)
7. Состояние (State)
8. Стратегия (Strategy)
9. Хранитель (Memento)
10. Цепочка обязанностей (Chain of Responsibility)
11. Шаблонный метод (Template Method)

--> Итератор
Проблема
    Составной объект, например, список, должен предоставлять доступ к своим
    элементам (объектам), не раскрывая их внутреннюю структуру, причем
    перебирать список требуется по разному в зависимости от задачи
Решение
    Создается класс "Итератор" который определяет интерфейс для доступа и перебора
    элементов. "Конкретный Итератор" реализует интерфейс класса "Итератор" и следит
    за текущей позицией при обходе "Агрегата".
    "Агрегат" определяет интерфейс для создания объекта итератора.
    "Конкретный Агрегат" реализует интерфейс создания итератора и возвращает
    экземпляр класса "Конкретный Итератор" отслеживает текущий объект
    в агрегате и может вычислить следующий объект при переборе.


